com.measuredsoftware.android.library.utils.CoordTools -> com.measuredsoftware.android.a.a.a:
    float getAngleFromVelocity(float,float) -> a
com.measuredsoftware.android.library.utils.ImageTools -> com.measuredsoftware.android.a.a.b:
    android.graphics.Bitmap loadBitmap(android.content.Context,int,android.graphics.BitmapFactory$Options) -> a
com.measuredsoftware.android.library.utils.NetTools -> com.measuredsoftware.android.a.a.c:
    android.net.NetworkInfo$State getConnectivityState(android.content.Context) -> a
com.measuredsoftware.android.timer.AlarmAlertWakeLock -> com.measuredsoftware.android.timer.a:
    android.os.PowerManager$WakeLock mCpuWakeLock -> a
    void acquireCpuWakeLock(android.content.Context) -> a
    void releaseCpuLock() -> a
com.measuredsoftware.android.timer.AlarmBuzzer -> com.measuredsoftware.android.timer.AlarmBuzzer:
    long[] sVibratePattern -> a
    boolean mPlaying -> b
    android.os.Vibrator mVibrator -> c
    android.media.MediaPlayer mMediaPlayer -> d
    long mStartTime -> e
    android.telephony.TelephonyManager mTelephonyManager -> f
    int mInitialCallState -> g
    android.os.Handler mHandler -> h
    android.telephony.PhoneStateListener mPhoneStateListener -> i
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void startAlarm(android.media.MediaPlayer) -> a
    void stop() -> a
    void access$000(com.measuredsoftware.android.timer.AlarmBuzzer) -> a
    int access$100(com.measuredsoftware.android.timer.AlarmBuzzer) -> b
    android.media.MediaPlayer access$202$d868b13(com.measuredsoftware.android.timer.AlarmBuzzer) -> c
com.measuredsoftware.android.timer.AlarmBuzzer$1 -> com.measuredsoftware.android.timer.b:
    com.measuredsoftware.android.timer.AlarmBuzzer this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.measuredsoftware.android.timer.AlarmBuzzer$2 -> com.measuredsoftware.android.timer.c:
    com.measuredsoftware.android.timer.AlarmBuzzer this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.measuredsoftware.android.timer.AlarmBuzzer$3 -> com.measuredsoftware.android.timer.d:
    com.measuredsoftware.android.timer.AlarmBuzzer this$0 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.measuredsoftware.android.timer.AlarmReceiver -> com.measuredsoftware.android.timer.AlarmReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.measuredsoftware.android.timer.Alarms -> com.measuredsoftware.android.timer.e:
    void disableAlert(android.content.Context) -> a
com.measuredsoftware.android.timer.HelpDialog -> com.measuredsoftware.android.timer.f:
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onClick(android.view.View) -> onClick
com.measuredsoftware.android.timer.RotatableImageView -> com.measuredsoftware.android.timer.RotatableImageView:
    float mAngle -> a
    float mAnglePrev -> l
    float mStartAngle1 -> b
    float mAngle1 -> c
    float mStartAngle2 -> d
    float mAngle2 -> e
    boolean mMultitouchActive -> f
    int mCentreX -> g
    int mCentreY -> h
    int mRadius -> i
    float mIncPerSection -> j
    float mHalfIncPerSection -> k
    android.graphics.Bitmap mIgnoreMask -> m
    int mIgnoreMaskWidth -> n
    int mIgnoreMaskHeight -> o
    boolean mUIMOnlyOnDown -> p
    boolean mUsedDownAction -> q
    void setIncrement$133aeb() -> a
    void initCentre() -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    float snapAngle(float) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIgnoreMask$1fdc9e65(android.graphics.Bitmap) -> a
com.measuredsoftware.android.timer.TimerActivity -> com.measuredsoftware.android.timer.TimerActivity:
    int N_COLOUR_ORANGE -> a
    int N_COLOUR_DGREY -> b
    int N_COLOUR_MGREY -> c
    int N_COLOUR_ENDTIME_ACTIVE -> d
    java.lang.String DEVICE_ID -> e
    java.lang.String DEVICE_MODEL -> f
    java.lang.String DEVICE_OS_VERSION -> g
    com.measuredsoftware.android.timer.TimerActivity mCurrentActivity -> h
    java.lang.String CANCEL -> k
    java.lang.String STOP -> l
    java.lang.String NOTIFICATION_TITLE -> m
    java.lang.String NOTIFICATION_EXTITLE -> n
    java.lang.String NOTIFICATION_EXDESC -> o
    android.graphics.Typeface mFont -> i
    com.measuredsoftware.android.timer.TimerView mDial -> p
    android.widget.TextView mCancelButton -> q
    android.widget.ImageView mMainBG -> r
    android.view.View$OnClickListener mCancelOnClickListener -> s
    android.view.View$OnTouchListener mCancelOnTouchListener -> t
    android.view.animation.Animation mFadeInAnim -> u
    android.view.animation.Animation mFadeOutAnim -> v
    android.view.animation.Animation mFadeInSlightAnim -> w
    android.view.animation.Animation mFadeOutSlightAnim -> x
    com.measuredsoftware.android.timer.TimerActivity$TickThread mTickThread -> y
    boolean mAlarmRinging -> z
    boolean mDeviceAsleep -> A
    android.content.SharedPreferences mPrefs -> B
    long mEndTimeMS -> C
    boolean mStartedByIntent -> D
    boolean mFirstChange -> E
    android.os.Handler mHandler -> F
    android.os.Handler mNetHandler -> G
    java.lang.String mInstallDate -> H
    int mClickedMMSCount -> I
    int mAvTimeLen -> J
    int mUsageCount -> K
    long mLastStatsUpload -> L
    boolean mUploadStats -> M
    boolean mShowNotification -> N
    boolean mFirstRun -> O
    boolean mThreadRun -> P
    android.view.animation.Animation$AnimationListener mResetCancelButton -> Q
    int mAppVersion -> j
    void onCreate(android.os.Bundle) -> onCreate
    void loadUserPrefs() -> b
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onStart() -> onStart
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onEvent(int,int) -> a
    void stopAlarmRinging() -> c
    boolean createNotificationItem() -> d
    void removeNotificationItem() -> e
    void writeEndTimeToPrefs() -> f
    void showCancelButton() -> g
    void hideCancelButton() -> h
    int postDeviceDetails(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int) -> a
    com.measuredsoftware.android.timer.TimerView access$000(com.measuredsoftware.android.timer.TimerActivity) -> a
    long access$102(com.measuredsoftware.android.timer.TimerActivity,long) -> a
    long access$100(com.measuredsoftware.android.timer.TimerActivity) -> b
    void access$200(com.measuredsoftware.android.timer.TimerActivity,java.lang.String,long) -> a
    long access$302$4ad04d56(com.measuredsoftware.android.timer.TimerActivity) -> c
    void access$400(com.measuredsoftware.android.timer.TimerActivity) -> d
    boolean access$500(com.measuredsoftware.android.timer.TimerActivity) -> e
    boolean access$600(com.measuredsoftware.android.timer.TimerActivity) -> f
    void access$700(com.measuredsoftware.android.timer.TimerActivity) -> g
    void access$800(com.measuredsoftware.android.timer.TimerActivity) -> h
    android.widget.TextView access$1000(com.measuredsoftware.android.timer.TimerActivity) -> i
    java.lang.String access$1100() -> a
    boolean access$1200(com.measuredsoftware.android.timer.TimerActivity) -> j
    android.os.Handler access$1300(com.measuredsoftware.android.timer.TimerActivity) -> k
    java.lang.String access$1400(com.measuredsoftware.android.timer.TimerActivity) -> l
    int access$1500(com.measuredsoftware.android.timer.TimerActivity) -> m
    int access$1600(com.measuredsoftware.android.timer.TimerActivity) -> n
    int access$1700(com.measuredsoftware.android.timer.TimerActivity) -> o
    android.os.Handler access$1800(com.measuredsoftware.android.timer.TimerActivity) -> p
com.measuredsoftware.android.timer.TimerActivity$1 -> com.measuredsoftware.android.timer.g:
    com.measuredsoftware.android.timer.TimerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.measuredsoftware.android.timer.TimerActivity$2 -> com.measuredsoftware.android.timer.h:
    com.measuredsoftware.android.timer.TimerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.measuredsoftware.android.timer.TimerActivity$3 -> com.measuredsoftware.android.timer.i:
    com.measuredsoftware.android.timer.TimerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.measuredsoftware.android.timer.TimerActivity$4 -> com.measuredsoftware.android.timer.j:
    com.measuredsoftware.android.timer.TimerActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.measuredsoftware.android.timer.TimerActivity$5 -> com.measuredsoftware.android.timer.k:
    com.measuredsoftware.android.timer.TimerActivity this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.measuredsoftware.android.timer.TimerActivity$6 -> com.measuredsoftware.android.timer.l:
    com.measuredsoftware.android.timer.TimerActivity this$0 -> a
    void run() -> run
com.measuredsoftware.android.timer.TimerActivity$TickThread -> com.measuredsoftware.android.timer.m:
    boolean mRun -> b
    boolean mPaused -> c
    com.measuredsoftware.android.timer.TimerActivity this$0 -> a
    void start() -> start
    void run() -> run
    void quit() -> a
com.measuredsoftware.android.timer.TimerPrefs -> com.measuredsoftware.android.timer.TimerPrefs:
    void onCreate(android.os.Bundle) -> onCreate
com.measuredsoftware.android.timer.TimerView -> com.measuredsoftware.android.timer.TimerView:
    com.measuredsoftware.android.timer.TimerView$OnEventListener mListener -> l
    int mCurrentTimeSecs -> m
    android.text.format.Time mTimeLeft -> n
    android.text.format.Time mEndTime -> o
    boolean mCountdownActive -> p
    float mPrevAngle -> q
    float mTotalAngle -> r
    android.graphics.Paint mTextLargeOrange -> s
    android.graphics.Paint mTextSmallMGray -> t
    android.graphics.Paint mTextSmallWhite -> u
    android.graphics.Paint mTextLarge -> v
    android.graphics.Paint mTextSmall -> w
    java.lang.String msCountdownTime -> x
    java.lang.String msEndTime -> y
    long mEndTimeMS -> z
    int mSecsLeftPrev -> A
    boolean mSettingTime -> B
    boolean mAlarmRinging -> C
    int TIMER_POS_X -> D
    int TIMER_POS_Y -> E
    int ENDTIME_POS_X -> F
    int ENDTIME_POS_Y -> G
    void setOnSetValueChangedListener(com.measuredsoftware.android.timer.TimerView$OnEventListener) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setEndTime(long) -> a
    void updateTime() -> b
    void setCountdownActive(boolean) -> b
    int convertAngleToSecs(float) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void setSecsRemaining(int) -> a
    void setDigitalTimeTo(int) -> b
    void setAlarmRinging(boolean) -> a
    void setEndClockTo(int) -> c
com.measuredsoftware.android.timer.TimerView$OnEventListener -> com.measuredsoftware.android.timer.n:
    void onEvent(int,int) -> a
