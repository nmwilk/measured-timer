package com.measuredsoftware.android.timer;

import android.content.Context;
import android.graphics.Canvas;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.widget.ImageView;

import com.measuredsoftware.android.utils.CoordTools;

public class RotatableImageView extends ImageView {
  
  public static final int MAX_ANGLE = 360;
  
  protected int mStartAngle;
  protected int mAngle;

  protected int mCentreX;
  protected int mCentreY;
  protected int mRadius;
  
  protected boolean mStartFlag;
  
  public RotatableImageView(Context context, AttributeSet attrs) {
    super(context, attrs);
    
    mStartAngle = 0;
    mAngle = 0;
    
    mCentreX = -1;
    mCentreY = -1;
    
    mStartFlag = false;
  }
  
  
  private void initCentre() {
    if (mCentreX == -1)
    {
      mCentreX = getMeasuredWidth() / 2;
      mCentreY = (getMeasuredHeight() / 2) ;
      mRadius = Math.min(mCentreX, mCentreY);
    }
  }
  
  public void setValue(int value) {
    // TODO change to actual time
    mAngle = value;
  }

  @Override
  protected void onDraw(Canvas canvas) {
    initCentre();
    
    canvas.save();
    canvas.rotate(mAngle, mCentreX, mCentreY);

    // Draw the background
    super.onDraw(canvas);
    
    canvas.restore();
  }

  @Override
  public boolean onTouchEvent(MotionEvent event) {
    initCentre();
    
    final int action = event.getAction();
    final float x = event.getX();
    final float y = event.getY();
    switch(action) {
      case MotionEvent.ACTION_DOWN:
        mStartFlag = true;
        break;
      case MotionEvent.ACTION_UP:
        // start the timer
        break;
      case MotionEvent.ACTION_MOVE:
        if (mStartFlag) {
          mStartAngle = (mAngle+((int)CoordTools.getAngleFromVelocity(x-mCentreX, y-mCentreY)));
          mStartFlag = false;
        } else {
          // adjust the angle
          int angle = ((int)CoordTools.getAngleFromVelocity(x-mCentreX, y-mCentreY));
          mAngle = mStartAngle-angle;
          if (mAngle < 0)
            mAngle += 360;
          else if (mAngle > MAX_ANGLE)
            mAngle = 0;
        }
        break;
    }

    
    this.invalidate();
    
    return true;
  }
}
